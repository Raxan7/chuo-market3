from django.core.management.base import BaseCommand
from django.conf import settings
import os
import json

class Command(BaseCommand):
    help = 'Generate VAPID keys for Web Push notifications'

    def handle(self, *args, **options):
        try:
            from py_vapid import Vapid
            
            # Generate new VAPID keys
            vapid = Vapid()
            vapid.generate_keys()
            
            # Get the keys in the format needed for django-webpush
            private_key = vapid.private_key.decode('utf-8')
            public_key = vapid.public_key.decode('utf-8')
            
            # Print the keys
            self.stdout.write(self.style.SUCCESS('VAPID keys generated successfully:'))
            self.stdout.write(self.style.SUCCESS(f'VAPID_PUBLIC_KEY = "{public_key}"'))
            self.stdout.write(self.style.SUCCESS(f'VAPID_PRIVATE_KEY = "{private_key}"'))
            
            # Update settings.py with the new keys
            settings_path = os.path.join(settings.BASE_DIR, 'Commerce', 'settings.py')
            
            with open(settings_path, 'r') as file:
                content = file.read()
                
            # Replace the empty VAPID keys with the new ones
            content = content.replace(
                'WEBPUSH_SETTINGS = {\n    "VAPID_PUBLIC_KEY": "",  # These will be populated by the vapid_key command\n    "VAPID_PRIVATE_KEY": "",',
                f'WEBPUSH_SETTINGS = {{\n    "VAPID_PUBLIC_KEY": "{public_key}",  # Generated by vapid_key command\n    "VAPID_PRIVATE_KEY": "{private_key}",'
            )
            
            with open(settings_path, 'w') as file:
                file.write(content)
                
            self.stdout.write(self.style.SUCCESS('Settings file updated with VAPID keys!'))
            
            # Also write keys to a .env file for backup
            env_file = os.path.join(settings.BASE_DIR, '.env')
            if os.path.exists(env_file):
                with open(env_file, 'a') as file:
                    file.write(f'\n# Web Push VAPID Keys\nVAPID_PUBLIC_KEY="{public_key}"\nVAPID_PRIVATE_KEY="{private_key}"\n')
                self.stdout.write(self.style.SUCCESS('VAPID keys also added to .env file'))
                
        except ImportError:
            self.stdout.write(self.style.ERROR('py_vapid package is not installed. Please install it with: pip install py_vapid'))
            return
