# Generated by Django 4.2.20 on 2025-08-07 11:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('linkedin', 'LinkedIn'), ('indeed', 'Indeed'), ('adzuna', 'Adzuna'), ('brightermonday', 'BrighterMonday')], max_length=50, unique=True, verbose_name='API Name')),
                ('api_key', models.CharField(max_length=255, verbose_name='API Key/Client ID')),
                ('api_secret', models.CharField(blank=True, max_length=255, verbose_name='API Secret/Client Secret')),
                ('additional_params', models.JSONField(blank=True, default=dict, verbose_name='Additional Parameters')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('last_fetch_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Fetch Date')),
                ('request_count', models.PositiveIntegerField(default=0, verbose_name='Request Count')),
                ('daily_limit', models.PositiveIntegerField(blank=True, null=True, verbose_name='Daily Request Limit')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'API Configuration',
                'verbose_name_plural': 'API Configurations',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Company Name')),
                ('description', tinymce.models.HTMLField(blank=True, verbose_name='Description')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='jobs/company_logos/', verbose_name='Logo')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('country', models.CharField(default='Tanzania', max_length=100, verbose_name='Country')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Contact Email')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Contact Phone')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Industry Name')),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Job Title')),
                ('description', tinymce.models.HTMLField(verbose_name='Job Description')),
                ('location', models.CharField(max_length=100, verbose_name='Location')),
                ('is_remote', models.BooleanField(default=False, verbose_name='Remote Job')),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Minimum Salary')),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maximum Salary')),
                ('salary_currency', models.CharField(default='TZS', max_length=10, verbose_name='Currency')),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('freelance', 'Freelance'), ('internship', 'Internship'), ('volunteer', 'Volunteer')], max_length=20, verbose_name='Job Type')),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('mid', 'Mid Level'), ('senior', 'Senior Level'), ('executive', 'Executive Level')], max_length=20, verbose_name='Experience Level')),
                ('requirements', tinymce.models.HTMLField(verbose_name='Requirements')),
                ('responsibilities', tinymce.models.HTMLField(blank=True, verbose_name='Responsibilities')),
                ('benefits', tinymce.models.HTMLField(blank=True, verbose_name='Benefits')),
                ('application_deadline', models.DateTimeField(verbose_name='Application Deadline')),
                ('posted_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Posted Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Views')),
                ('applications_count', models.PositiveIntegerField(default=0, verbose_name='Applications')),
                ('source', models.CharField(blank=True, help_text='API source of the job (e.g., LinkedIn, Indeed)', max_length=50, verbose_name='Source')),
                ('external_id', models.CharField(blank=True, help_text='ID from the external source', max_length=255, verbose_name='External ID')),
                ('external_url', models.URLField(blank=True, help_text='Original job posting URL', verbose_name='External URL')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='jobs.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_jobs', to=settings.AUTH_USER_MODEL)),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='jobs.industry')),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
                'ordering': ['-posted_date'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Skill Name')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_date', models.DateTimeField(auto_now_add=True, verbose_name='Saved Date')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saves', to='jobs.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Saved Job',
                'verbose_name_plural': 'Saved Jobs',
                'ordering': ['-saved_date'],
            },
        ),
        migrations.CreateModel(
            name='JobSearchPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_types', models.CharField(blank=True, help_text='Comma-separated list of job types', max_length=255, verbose_name='Job Types')),
                ('locations', models.CharField(blank=True, help_text='Comma-separated list of locations', max_length=255, verbose_name='Locations')),
                ('keywords', models.CharField(blank=True, help_text='Comma-separated list of job keywords', max_length=255, verbose_name='Keywords')),
                ('experience_levels', models.CharField(blank=True, help_text='Comma-separated list of experience levels', max_length=255, verbose_name='Experience Levels')),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Minimum Salary')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('notification_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('instant', 'Instant')], default='daily', max_length=20, verbose_name='Notification Frequency')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('industries', models.ManyToManyField(blank=True, related_name='user_preferences', to='jobs.industry')),
                ('skills', models.ManyToManyField(blank=True, related_name='user_preferences', to='jobs.skill')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Search Preference',
                'verbose_name_plural': 'Job Search Preferences',
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(verbose_name='Cover Letter')),
                ('resume', models.FileField(upload_to='jobs/resumes/', verbose_name='Resume')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('shortlisted', 'Shortlisted'), ('rejected', 'Rejected'), ('interview', 'Interview'), ('offered', 'Offered'), ('hired', 'Hired')], default='pending', max_length=20, verbose_name='Status')),
                ('applied_date', models.DateTimeField(auto_now_add=True, verbose_name='Applied Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('employer_notes', models.TextField(blank=True, verbose_name='Employer Notes')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='jobs.job')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['-applied_date'],
            },
        ),
        migrations.AddField(
            model_name='job',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='jobs', to='jobs.skill'),
        ),
        migrations.CreateModel(
            name='ApiRequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=255, verbose_name='Endpoint')),
                ('request_params', models.JSONField(blank=True, default=dict, verbose_name='Request Parameters')),
                ('response_status', models.PositiveSmallIntegerField(verbose_name='Response Status Code')),
                ('response_data', models.JSONField(blank=True, null=True, verbose_name='Response Data')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('request_date', models.DateTimeField(auto_now_add=True, verbose_name='Request Date')),
                ('execution_time', models.FloatField(blank=True, null=True, verbose_name='Execution Time (seconds)')),
                ('jobs_fetched', models.PositiveIntegerField(default=0, verbose_name='Jobs Fetched')),
                ('jobs_created', models.PositiveIntegerField(default=0, verbose_name='Jobs Created')),
                ('jobs_updated', models.PositiveIntegerField(default=0, verbose_name='Jobs Updated')),
                ('api_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_logs', to='jobs.apiconfiguration')),
            ],
            options={
                'verbose_name': 'API Request Log',
                'verbose_name_plural': 'API Request Logs',
                'ordering': ['-request_date'],
            },
        ),
        migrations.AddConstraint(
            model_name='savedjob',
            constraint=models.UniqueConstraint(fields=('job', 'user'), name='unique_saved_job'),
        ),
        migrations.AddConstraint(
            model_name='jobapplication',
            constraint=models.UniqueConstraint(fields=('job', 'applicant'), name='unique_job_application'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['title'], name='jobs_job_title_0e1e41_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['location'], name='jobs_job_locatio_8b2f8c_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['job_type'], name='jobs_job_job_typ_f6c220_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['source'], name='jobs_job_source_e2155e_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['external_id'], name='jobs_job_externa_6b51f9_idx'),
        ),
    ]
